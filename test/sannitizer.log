=================================================================
==3276==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe78202b68 at pc 0x561a9810aaa9 bp 0x7ffe78202b20 sp 0x7ffe78202b10
READ of size 4 at 0x7ffe78202b68 thread T0
    #0 0x561a9810aaa8 in main (/home/cxy-hm/MyGit/Test/test/test+0xaa8)
    #1 0x7efe85997bf6 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21bf6)
    #2 0x561a9810a899 in _start (/home/cxy-hm/MyGit/Test/test/test+0x899)

Address 0x7ffe78202b68 is located in stack of thread T0 at offset 40 in frame
    #0 0x561a9810a989 in main (/home/cxy-hm/MyGit/Test/test/test+0x989)

  This frame has 1 object(s):
    [32, 40) 'a' <== Memory access at offset 40 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/cxy-hm/MyGit/Test/test/test+0xaa8) in main
Shadow bytes around the buggy address:
  0x10004f038510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004f038520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004f038530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004f038540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004f038550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10004f038560: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00[f2]f2 f2
  0x10004f038570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004f038580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004f038590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004f0385a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004f0385b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==3276==ABORTING
