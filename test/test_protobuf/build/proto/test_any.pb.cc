// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test_any.proto

#include "test_any.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_test_5fany_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OneofMsg_test_5fany_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_test_5fany_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TestTwo_KVItemEntry_DoNotUse_test_5fany_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fany_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Any_google_2fprotobuf_2fany_2eproto;
class TestOneDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestOne> _instance;
} _TestOne_default_instance_;
class AnyMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AnyMessage> _instance;
} _AnyMessage_default_instance_;
class OneofMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OneofMsg> _instance;
  ::PROTOBUF_NAMESPACE_ID::int32 int_32_value_;
  ::PROTOBUF_NAMESPACE_ID::int64 int_64_value_;
  bool bool_value_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr string_value_;
  const PROTOBUF_NAMESPACE_ID::Any* any_;
} _OneofMsg_default_instance_;
class TestTwo_KVItemEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTwo_KVItemEntry_DoNotUse> _instance;
} _TestTwo_KVItemEntry_DoNotUse_default_instance_;
class TestTwoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTwo> _instance;
} _TestTwo_default_instance_;
static void InitDefaultsscc_info_AnyMessage_test_5fany_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AnyMessage_default_instance_;
    new (ptr) ::AnyMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AnyMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AnyMessage_test_5fany_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AnyMessage_test_5fany_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsscc_info_OneofMsg_test_5fany_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_OneofMsg_default_instance_;
    new (ptr) ::OneofMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OneofMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OneofMsg_test_5fany_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_OneofMsg_test_5fany_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsscc_info_TestOne_test_5fany_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TestOne_default_instance_;
    new (ptr) ::TestOne();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TestOne::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestOne_test_5fany_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestOne_test_5fany_2eproto}, {}};

static void InitDefaultsscc_info_TestTwo_test_5fany_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TestTwo_default_instance_;
    new (ptr) ::TestTwo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TestTwo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TestTwo_test_5fany_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TestTwo_test_5fany_2eproto}, {
      &scc_info_TestTwo_KVItemEntry_DoNotUse_test_5fany_2eproto.base,}};

static void InitDefaultsscc_info_TestTwo_KVItemEntry_DoNotUse_test_5fany_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TestTwo_KVItemEntry_DoNotUse_default_instance_;
    new (ptr) ::TestTwo_KVItemEntry_DoNotUse();
  }
  ::TestTwo_KVItemEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TestTwo_KVItemEntry_DoNotUse_test_5fany_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TestTwo_KVItemEntry_DoNotUse_test_5fany_2eproto}, {
      &scc_info_OneofMsg_test_5fany_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_test_5fany_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_test_5fany_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_test_5fany_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_test_5fany_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TestOne, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TestOne, name_),
  PROTOBUF_FIELD_OFFSET(::TestOne, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AnyMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AnyMessage, any_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OneofMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::OneofMsg, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::OneofMsgDefaultTypeInternal, int_32_value_),
  offsetof(::OneofMsgDefaultTypeInternal, int_64_value_),
  offsetof(::OneofMsgDefaultTypeInternal, bool_value_),
  offsetof(::OneofMsgDefaultTypeInternal, string_value_),
  offsetof(::OneofMsgDefaultTypeInternal, any_),
  PROTOBUF_FIELD_OFFSET(::OneofMsg, msg_),
  PROTOBUF_FIELD_OFFSET(::TestTwo_KVItemEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TestTwo_KVItemEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TestTwo_KVItemEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::TestTwo_KVItemEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TestTwo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TestTwo, k_v_item_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::TestOne)},
  { 7, -1, sizeof(::AnyMessage)},
  { 13, -1, sizeof(::OneofMsg)},
  { 24, 31, sizeof(::TestTwo_KVItemEntry_DoNotUse)},
  { 33, -1, sizeof(::TestTwo)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_TestOne_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_AnyMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_OneofMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_TestTwo_KVItemEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_TestTwo_default_instance_),
};

const char descriptor_table_protodef_test_5fany_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016test_any.proto\032\031google/protobuf/any.pr"
  "oto\"%\n\007TestOne\022\014\n\004name\030\001 \001(\t\022\014\n\004data\030\002 \001"
  "(\t\"/\n\nAnyMessage\022!\n\003any\030\001 \001(\0132\024.google.p"
  "rotobuf.Any\"\224\001\n\010OneofMsg\022\026\n\014int_32_value"
  "\030\001 \001(\005H\000\022\026\n\014int_64_value\030\002 \001(\003H\000\022\024\n\nbool"
  "_value\030\003 \001(\010H\000\022\026\n\014string_value\030\004 \001(\tH\000\022#"
  "\n\003any\030\005 \001(\0132\024.google.protobuf.AnyH\000B\005\n\003m"
  "sg\"k\n\007TestTwo\022&\n\010k_v_item\030\001 \003(\0132\024.TestTw"
  "o.KVItemEntry\0328\n\013KVItemEntry\022\013\n\003key\030\001 \001("
  "\t\022\030\n\005value\030\002 \001(\0132\t.OneofMsg:\0028\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_test_5fany_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_test_5fany_2eproto_sccs[5] = {
  &scc_info_AnyMessage_test_5fany_2eproto.base,
  &scc_info_OneofMsg_test_5fany_2eproto.base,
  &scc_info_TestOne_test_5fany_2eproto.base,
  &scc_info_TestTwo_test_5fany_2eproto.base,
  &scc_info_TestTwo_KVItemEntry_DoNotUse_test_5fany_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_test_5fany_2eproto_once;
static bool descriptor_table_test_5fany_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_test_5fany_2eproto = {
  &descriptor_table_test_5fany_2eproto_initialized, descriptor_table_protodef_test_5fany_2eproto, "test_any.proto", 399,
  &descriptor_table_test_5fany_2eproto_once, descriptor_table_test_5fany_2eproto_sccs, descriptor_table_test_5fany_2eproto_deps, 5, 1,
  schemas, file_default_instances, TableStruct_test_5fany_2eproto::offsets,
  file_level_metadata_test_5fany_2eproto, 5, file_level_enum_descriptors_test_5fany_2eproto, file_level_service_descriptors_test_5fany_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_test_5fany_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_test_5fany_2eproto), true);

// ===================================================================

void TestOne::InitAsDefaultInstance() {
}
class TestOne::_Internal {
 public:
};

TestOne::TestOne()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TestOne)
}
TestOne::TestOne(const TestOne& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:TestOne)
}

void TestOne::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TestOne_test_5fany_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TestOne::~TestOne() {
  // @@protoc_insertion_point(destructor:TestOne)
  SharedDtor();
}

void TestOne::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TestOne::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestOne& TestOne::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestOne_test_5fany_2eproto.base);
  return *internal_default_instance();
}


void TestOne::Clear() {
// @@protoc_insertion_point(message_clear_start:TestOne)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* TestOne::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TestOne.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TestOne.data"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestOne::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TestOne)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TestOne.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string data = 2;
  if (this->data().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data().data(), static_cast<int>(this->_internal_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TestOne.data");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TestOne)
  return target;
}

size_t TestOne::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TestOne)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestOne::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TestOne)
  GOOGLE_DCHECK_NE(&from, this);
  const TestOne* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestOne>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TestOne)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TestOne)
    MergeFrom(*source);
  }
}

void TestOne::MergeFrom(const TestOne& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TestOne)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void TestOne::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TestOne)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestOne::CopyFrom(const TestOne& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TestOne)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestOne::IsInitialized() const {
  return true;
}

void TestOne::InternalSwap(TestOne* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata TestOne::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AnyMessage::InitAsDefaultInstance() {
  ::_AnyMessage_default_instance_._instance.get_mutable()->any_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
}
class AnyMessage::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Any& any(const AnyMessage* msg);
};

const PROTOBUF_NAMESPACE_ID::Any&
AnyMessage::_Internal::any(const AnyMessage* msg) {
  return *msg->any_;
}
void AnyMessage::clear_any() {
  if (GetArenaNoVirtual() == nullptr && any_ != nullptr) {
    delete any_;
  }
  any_ = nullptr;
}
AnyMessage::AnyMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnyMessage)
}
AnyMessage::AnyMessage(const AnyMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_any()) {
    any_ = new PROTOBUF_NAMESPACE_ID::Any(*from.any_);
  } else {
    any_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AnyMessage)
}

void AnyMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AnyMessage_test_5fany_2eproto.base);
  any_ = nullptr;
}

AnyMessage::~AnyMessage() {
  // @@protoc_insertion_point(destructor:AnyMessage)
  SharedDtor();
}

void AnyMessage::SharedDtor() {
  if (this != internal_default_instance()) delete any_;
}

void AnyMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AnyMessage& AnyMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AnyMessage_test_5fany_2eproto.base);
  return *internal_default_instance();
}


void AnyMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:AnyMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && any_ != nullptr) {
    delete any_;
  }
  any_ = nullptr;
  _internal_metadata_.Clear();
}

const char* AnyMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Any any = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_any(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AnyMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnyMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any any = 1;
  if (this->has_any()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::any(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnyMessage)
  return target;
}

size_t AnyMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AnyMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Any any = 1;
  if (this->has_any()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *any_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AnyMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AnyMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const AnyMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AnyMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AnyMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AnyMessage)
    MergeFrom(*source);
  }
}

void AnyMessage::MergeFrom(const AnyMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AnyMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_any()) {
    _internal_mutable_any()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_any());
  }
}

void AnyMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AnyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnyMessage::CopyFrom(const AnyMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AnyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnyMessage::IsInitialized() const {
  return true;
}

void AnyMessage::InternalSwap(AnyMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(any_, other->any_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AnyMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OneofMsg::InitAsDefaultInstance() {
  ::_OneofMsg_default_instance_.int_32_value_ = 0;
  ::_OneofMsg_default_instance_.int_64_value_ = PROTOBUF_LONGLONG(0);
  ::_OneofMsg_default_instance_.bool_value_ = false;
  ::_OneofMsg_default_instance_.string_value_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::_OneofMsg_default_instance_.any_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
}
class OneofMsg::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Any& any(const OneofMsg* msg);
};

const PROTOBUF_NAMESPACE_ID::Any&
OneofMsg::_Internal::any(const OneofMsg* msg) {
  return *msg->msg_.any_;
}
void OneofMsg::set_allocated_any(PROTOBUF_NAMESPACE_ID::Any* any) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (any) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      any = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, any, submessage_arena);
    }
    set_has_any();
    msg_.any_ = any;
  }
  // @@protoc_insertion_point(field_set_allocated:OneofMsg.any)
}
void OneofMsg::clear_any() {
  if (_internal_has_any()) {
    delete msg_.any_;
    clear_has_msg();
  }
}
OneofMsg::OneofMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OneofMsg)
}
OneofMsg::OneofMsg(const OneofMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_msg();
  switch (from.msg_case()) {
    case kInt32Value: {
      _internal_set_int_32_value(from._internal_int_32_value());
      break;
    }
    case kInt64Value: {
      _internal_set_int_64_value(from._internal_int_64_value());
      break;
    }
    case kBoolValue: {
      _internal_set_bool_value(from._internal_bool_value());
      break;
    }
    case kStringValue: {
      _internal_set_string_value(from._internal_string_value());
      break;
    }
    case kAny: {
      _internal_mutable_any()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_any());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:OneofMsg)
}

void OneofMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OneofMsg_test_5fany_2eproto.base);
  clear_has_msg();
}

OneofMsg::~OneofMsg() {
  // @@protoc_insertion_point(destructor:OneofMsg)
  SharedDtor();
}

void OneofMsg::SharedDtor() {
  if (has_msg()) {
    clear_msg();
  }
}

void OneofMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OneofMsg& OneofMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OneofMsg_test_5fany_2eproto.base);
  return *internal_default_instance();
}


void OneofMsg::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:OneofMsg)
  switch (msg_case()) {
    case kInt32Value: {
      // No need to clear
      break;
    }
    case kInt64Value: {
      // No need to clear
      break;
    }
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kStringValue: {
      msg_.string_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kAny: {
      delete msg_.any_;
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void OneofMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:OneofMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_msg();
  _internal_metadata_.Clear();
}

const char* OneofMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 int_32_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _internal_set_int_32_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 int_64_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _internal_set_int_64_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool bool_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _internal_set_bool_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string string_value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_string_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "OneofMsg.string_value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Any any = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_any(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OneofMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OneofMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 int_32_value = 1;
  if (_internal_has_int_32_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_int_32_value(), target);
  }

  // int64 int_64_value = 2;
  if (_internal_has_int_64_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_int_64_value(), target);
  }

  // bool bool_value = 3;
  if (_internal_has_bool_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_bool_value(), target);
  }

  // string string_value = 4;
  if (_internal_has_string_value()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string_value().data(), static_cast<int>(this->_internal_string_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "OneofMsg.string_value");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_string_value(), target);
  }

  // .google.protobuf.Any any = 5;
  if (_internal_has_any()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::any(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OneofMsg)
  return target;
}

size_t OneofMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OneofMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (msg_case()) {
    // int32 int_32_value = 1;
    case kInt32Value: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_int_32_value());
      break;
    }
    // int64 int_64_value = 2;
    case kInt64Value: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_int_64_value());
      break;
    }
    // bool bool_value = 3;
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    // string string_value = 4;
    case kStringValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_string_value());
      break;
    }
    // .google.protobuf.Any any = 5;
    case kAny: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *msg_.any_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OneofMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OneofMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const OneofMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OneofMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OneofMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OneofMsg)
    MergeFrom(*source);
  }
}

void OneofMsg::MergeFrom(const OneofMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OneofMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.msg_case()) {
    case kInt32Value: {
      _internal_set_int_32_value(from._internal_int_32_value());
      break;
    }
    case kInt64Value: {
      _internal_set_int_64_value(from._internal_int_64_value());
      break;
    }
    case kBoolValue: {
      _internal_set_bool_value(from._internal_bool_value());
      break;
    }
    case kStringValue: {
      _internal_set_string_value(from._internal_string_value());
      break;
    }
    case kAny: {
      _internal_mutable_any()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_any());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
}

void OneofMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OneofMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneofMsg::CopyFrom(const OneofMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OneofMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneofMsg::IsInitialized() const {
  return true;
}

void OneofMsg::InternalSwap(OneofMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(msg_, other->msg_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata OneofMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

TestTwo_KVItemEntry_DoNotUse::TestTwo_KVItemEntry_DoNotUse() {}
TestTwo_KVItemEntry_DoNotUse::TestTwo_KVItemEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestTwo_KVItemEntry_DoNotUse::MergeFrom(const TestTwo_KVItemEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestTwo_KVItemEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void TestTwo_KVItemEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void TestTwo::InitAsDefaultInstance() {
}
class TestTwo::_Internal {
 public:
};

TestTwo::TestTwo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TestTwo)
}
TestTwo::TestTwo(const TestTwo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  k_v_item_.MergeFrom(from.k_v_item_);
  // @@protoc_insertion_point(copy_constructor:TestTwo)
}

void TestTwo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TestTwo_test_5fany_2eproto.base);
}

TestTwo::~TestTwo() {
  // @@protoc_insertion_point(destructor:TestTwo)
  SharedDtor();
}

void TestTwo::SharedDtor() {
}

void TestTwo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTwo& TestTwo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTwo_test_5fany_2eproto.base);
  return *internal_default_instance();
}


void TestTwo::Clear() {
// @@protoc_insertion_point(message_clear_start:TestTwo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_v_item_.Clear();
  _internal_metadata_.Clear();
}

const char* TestTwo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, .OneofMsg> k_v_item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&k_v_item_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTwo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TestTwo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .OneofMsg> k_v_item = 1;
  if (!this->_internal_k_v_item().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::OneofMsg >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "TestTwo.KVItemEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_k_v_item().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_k_v_item().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::OneofMsg >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::OneofMsg >::const_iterator
          it = this->_internal_k_v_item().begin();
          it != this->_internal_k_v_item().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = TestTwo_KVItemEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::OneofMsg >::const_iterator
          it = this->_internal_k_v_item().begin();
          it != this->_internal_k_v_item().end(); ++it) {
        target = TestTwo_KVItemEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TestTwo)
  return target;
}

size_t TestTwo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TestTwo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .OneofMsg> k_v_item = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_k_v_item_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::OneofMsg >::const_iterator
      it = this->_internal_k_v_item().begin();
      it != this->_internal_k_v_item().end(); ++it) {
    total_size += TestTwo_KVItemEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTwo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TestTwo)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTwo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTwo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TestTwo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TestTwo)
    MergeFrom(*source);
  }
}

void TestTwo::MergeFrom(const TestTwo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TestTwo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_v_item_.MergeFrom(from.k_v_item_);
}

void TestTwo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TestTwo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTwo::CopyFrom(const TestTwo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TestTwo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTwo::IsInitialized() const {
  return true;
}

void TestTwo::InternalSwap(TestTwo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  k_v_item_.Swap(&other->k_v_item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTwo::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::TestOne* Arena::CreateMaybeMessage< ::TestOne >(Arena* arena) {
  return Arena::CreateInternal< ::TestOne >(arena);
}
template<> PROTOBUF_NOINLINE ::AnyMessage* Arena::CreateMaybeMessage< ::AnyMessage >(Arena* arena) {
  return Arena::CreateInternal< ::AnyMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::OneofMsg* Arena::CreateMaybeMessage< ::OneofMsg >(Arena* arena) {
  return Arena::CreateInternal< ::OneofMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::TestTwo_KVItemEntry_DoNotUse* Arena::CreateMaybeMessage< ::TestTwo_KVItemEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::TestTwo_KVItemEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::TestTwo* Arena::CreateMaybeMessage< ::TestTwo >(Arena* arena) {
  return Arena::CreateInternal< ::TestTwo >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
