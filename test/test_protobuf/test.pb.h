// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#ifndef PROTOBUF_test_2eproto__INCLUDED
#define PROTOBUF_test_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_test_2eproto();
void protobuf_AssignDesc_test_2eproto();
void protobuf_ShutdownFile_test_2eproto();

class Test;
class TestString;

// ===================================================================

class Test : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Test) */ {
 public:
  Test();
  virtual ~Test();

  Test(const Test& from);

  inline Test& operator=(const Test& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Test& default_instance();

  void Swap(Test* other);

  // implements Message ----------------------------------------------

  inline Test* New() const { return New(NULL); }

  Test* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Test& from);
  void MergeFrom(const Test& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Test* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 ts_set = 1;
  int ts_set_size() const;
  void clear_ts_set();
  static const int kTsSetFieldNumber = 1;
  ::google::protobuf::uint64 ts_set(int index) const;
  void set_ts_set(int index, ::google::protobuf::uint64 value);
  void add_ts_set(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      ts_set() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_ts_set();

  // @@protoc_insertion_point(class_scope:Test)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > ts_set_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static Test* default_instance_;
};
// -------------------------------------------------------------------

class TestString : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TestString) */ {
 public:
  TestString();
  virtual ~TestString();

  TestString(const TestString& from);

  inline TestString& operator=(const TestString& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestString& default_instance();

  void Swap(TestString* other);

  // implements Message ----------------------------------------------

  inline TestString* New() const { return New(NULL); }

  TestString* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TestString& from);
  void MergeFrom(const TestString& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TestString* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string xxx = 1;
  int xxx_size() const;
  void clear_xxx();
  static const int kXxxFieldNumber = 1;
  const ::std::string& xxx(int index) const;
  ::std::string* mutable_xxx(int index);
  void set_xxx(int index, const ::std::string& value);
  void set_xxx(int index, const char* value);
  void set_xxx(int index, const char* value, size_t size);
  ::std::string* add_xxx();
  void add_xxx(const ::std::string& value);
  void add_xxx(const char* value);
  void add_xxx(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& xxx() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_xxx();

  // @@protoc_insertion_point(class_scope:TestString)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> xxx_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static TestString* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Test

// repeated uint64 ts_set = 1;
inline int Test::ts_set_size() const {
  return ts_set_.size();
}
inline void Test::clear_ts_set() {
  ts_set_.Clear();
}
inline ::google::protobuf::uint64 Test::ts_set(int index) const {
  // @@protoc_insertion_point(field_get:Test.ts_set)
  return ts_set_.Get(index);
}
inline void Test::set_ts_set(int index, ::google::protobuf::uint64 value) {
  ts_set_.Set(index, value);
  // @@protoc_insertion_point(field_set:Test.ts_set)
}
inline void Test::add_ts_set(::google::protobuf::uint64 value) {
  ts_set_.Add(value);
  // @@protoc_insertion_point(field_add:Test.ts_set)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Test::ts_set() const {
  // @@protoc_insertion_point(field_list:Test.ts_set)
  return ts_set_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Test::mutable_ts_set() {
  // @@protoc_insertion_point(field_mutable_list:Test.ts_set)
  return &ts_set_;
}

// -------------------------------------------------------------------

// TestString

// repeated string xxx = 1;
inline int TestString::xxx_size() const {
  return xxx_.size();
}
inline void TestString::clear_xxx() {
  xxx_.Clear();
}
inline const ::std::string& TestString::xxx(int index) const {
  // @@protoc_insertion_point(field_get:TestString.xxx)
  return xxx_.Get(index);
}
inline ::std::string* TestString::mutable_xxx(int index) {
  // @@protoc_insertion_point(field_mutable:TestString.xxx)
  return xxx_.Mutable(index);
}
inline void TestString::set_xxx(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:TestString.xxx)
  xxx_.Mutable(index)->assign(value);
}
inline void TestString::set_xxx(int index, const char* value) {
  xxx_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:TestString.xxx)
}
inline void TestString::set_xxx(int index, const char* value, size_t size) {
  xxx_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TestString.xxx)
}
inline ::std::string* TestString::add_xxx() {
  // @@protoc_insertion_point(field_add_mutable:TestString.xxx)
  return xxx_.Add();
}
inline void TestString::add_xxx(const ::std::string& value) {
  xxx_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:TestString.xxx)
}
inline void TestString::add_xxx(const char* value) {
  xxx_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:TestString.xxx)
}
inline void TestString::add_xxx(const char* value, size_t size) {
  xxx_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:TestString.xxx)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TestString::xxx() const {
  // @@protoc_insertion_point(field_list:TestString.xxx)
  return xxx_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TestString::mutable_xxx() {
  // @@protoc_insertion_point(field_mutable_list:TestString.xxx)
  return &xxx_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_test_2eproto__INCLUDED
