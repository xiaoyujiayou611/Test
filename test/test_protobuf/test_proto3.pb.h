// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test_proto3.proto

#ifndef PROTOBUF_test_5fproto3_2eproto__INCLUDED
#define PROTOBUF_test_5fproto3_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_test_5fproto3_2eproto();
void protobuf_AssignDesc_test_5fproto3_2eproto();
void protobuf_ShutdownFile_test_5fproto3_2eproto();

class Test;

// ===================================================================

class Test : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Test) */ {
 public:
  Test();
  virtual ~Test();

  Test(const Test& from);

  inline Test& operator=(const Test& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Test& default_instance();

  void Swap(Test* other);

  // implements Message ----------------------------------------------

  inline Test* New() const { return New(NULL); }

  Test* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Test& from);
  void MergeFrom(const Test& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Test* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 a = 1;
  void clear_a();
  static const int kAFieldNumber = 1;
  ::google::protobuf::uint32 a() const;
  void set_a(::google::protobuf::uint32 value);

  // optional string b = 2;
  void clear_b();
  static const int kBFieldNumber = 2;
  const ::std::string& b() const;
  void set_b(const ::std::string& value);
  void set_b(const char* value);
  void set_b(const char* value, size_t size);
  ::std::string* mutable_b();
  ::std::string* release_b();
  void set_allocated_b(::std::string* b);

  // optional uint64 c = 3;
  void clear_c();
  static const int kCFieldNumber = 3;
  ::google::protobuf::uint64 c() const;
  void set_c(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Test)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr b_;
  ::google::protobuf::uint64 c_;
  ::google::protobuf::uint32 a_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_test_5fproto3_2eproto();
  friend void protobuf_AssignDesc_test_5fproto3_2eproto();
  friend void protobuf_ShutdownFile_test_5fproto3_2eproto();

  void InitAsDefaultInstance();
  static Test* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Test

// optional uint32 a = 1;
inline void Test::clear_a() {
  a_ = 0u;
}
inline ::google::protobuf::uint32 Test::a() const {
  // @@protoc_insertion_point(field_get:Test.a)
  return a_;
}
inline void Test::set_a(::google::protobuf::uint32 value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:Test.a)
}

// optional string b = 2;
inline void Test::clear_b() {
  b_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Test::b() const {
  // @@protoc_insertion_point(field_get:Test.b)
  return b_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Test::set_b(const ::std::string& value) {
  
  b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Test.b)
}
inline void Test::set_b(const char* value) {
  
  b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Test.b)
}
inline void Test::set_b(const char* value, size_t size) {
  
  b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Test.b)
}
inline ::std::string* Test::mutable_b() {
  
  // @@protoc_insertion_point(field_mutable:Test.b)
  return b_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Test::release_b() {
  // @@protoc_insertion_point(field_release:Test.b)
  
  return b_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Test::set_allocated_b(::std::string* b) {
  if (b != NULL) {
    
  } else {
    
  }
  b_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), b);
  // @@protoc_insertion_point(field_set_allocated:Test.b)
}

// optional uint64 c = 3;
inline void Test::clear_c() {
  c_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Test::c() const {
  // @@protoc_insertion_point(field_get:Test.c)
  return c_;
}
inline void Test::set_c(::google::protobuf::uint64 value) {
  
  c_ = value;
  // @@protoc_insertion_point(field_set:Test.c)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_test_5fproto3_2eproto__INCLUDED
